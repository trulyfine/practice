1.反射是什么：https://juejin.cn/post/6864324335654404104
    反射的思想：在程序运行过程中确定和解析数据类的类型。
    反射的作用：对于在编译期无法确定使用哪个数据类的场景，通过反射可以在程序运行时构造出不同的数据类实例。

2.一个程序，从编写完代码，到被计算机运行，总共需要经历以下四步：https://www.zhihu.com/question/484621898/answer/2598568465
    编译。编译器会将程序源代码编译成汇编代码。
    汇编。汇编器会将汇编代码文件翻译成为二进制的机器码。
    链接。链接器会将一个个目标文件和库文件链接在一起，成为一个完整的可执行程序。
    载入。加载器会将可执行文件的代码和数据从硬盘加载到内存中，然后跳转到程序的第一条指令处开始运行。
    链接器和加载器是由操作系统实现的程序。而编译器和汇编器则是由不同的编程语言自己实现的了。

这里需要展开来说一说，我们常用的高级语言，按照转化成机器码的方式不同可以分为编译型语言和解释型语言，

编译型语言要求由编译器提前将源代码一次性转换成二进制指令，即生成一个可执行程序，后续的执行无需重新编译。
比如我们常见的 C、Golang 等，优点是执行效率高；缺点是可执行程序不能跨平台（不同的操作系统对不同的可执行文件的内部结构要求不同；
另外，由于不同操作系统支持的函数等也可能不同，所以部分源代码也不能跨平台）。
解释型语言不需要提前编译，程序只在运行时才由解释器翻译成机器码，每执行依次就要翻译一次。
比如我们常见的 Python、PHP 等，优点是较方便（对编写用户而言，省去了编译的步骤），实时性高（每次修改代码后都可直接运行），能跨平台；缺点是效率低。
半编译半解释型语言：还有一类比较特殊，混合了两种方式。源代码需要先编译成一种中间文件（字节码文件），然后再将中间文件拿到虚拟机中解释执行。比如我们常见的 Java、C# 等。

3.作为一种解释型语言（根本无需编译）的JS，JS中的反射（Reflect）有什么作用
Reflect存在的意义更多是为了配合代理（Proxy）使用，并且避免了使用超类Object进行一些基础操作（出错时会抛出error，需大量使用catch)